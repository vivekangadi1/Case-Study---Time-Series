colnames(APAC_consumer_sales_df) <- c("month","sales")
APAC_consumer_sales_df$sales <- as.numeric(as.character((APAC_consumer_sales_df$sales)))
lines(Smoothed_APAC_consumer_sales,col='red',lwd=2)
APAC_consumer_sales.ts <- ts(APAC_consumer_sales_df$sales,frequency=12,start=c(2011,1),
end=c(2014,12))
APAC_Consumer_sales_hw <- ts(APAC_consumer_sales_df$sales,frequency=12,start=c(2011,1),
end=c(2014,12))
HoltWinters(APAC_Consumer_sales_hw)
HoltWinters(APAC_Consumer_sales_hw)
plot(APAC_Consumer_sales_hw)
HoltWinters(APAC_Consumer_sales_hw)
plot(APAC_Consumer_sales_hw)
HoltWinters(APAC_Consumer_sales_hw)$fitted
APAC_Consumer_sales_hw <- ts(APAC_consumer_sales_df$sales,frequency=12,start=c(2011,1),
end=c(2014,12))
HoltWinters(APAC_Consumer_sales_hw)$fitted
APAC_Consumer_sales_hw_hw<-HoltWinters(APAC_Consumer_sales_hw)
plot(APAC_Consumer_sales_hw)
lines(predict(APAC_Consumer_sales_hw_hw$fitted,n.ahead=48),col=2)
predict(APAC_Consumer_sales_hw_hw,n.ahead=6)
ntest <- 6
nTrain <- length(APAC_consumer_sales.ts)-ntest
train.ts <- window(APAC_consumer_sales.ts,start = c(2011,1),end=c(2011,nTrain))
valid.ts <- window(APAC_consumer_sales.ts,start=c(2011,nTrain+1),
end=c(2011,nTrain+ntest))
train.lm <- tslm(train.ts~trend+I(sin(2*pi*trend/12))+season)
summary(train.lm)
train.lm.forecast <- forecast(train.lm,h=ntest,level=0)
train.lm <- tslm(train.ts~trend+I(sin(2*pi*trend/12))+season)
summary(train.lm)
train.lm.forecast <- forecast(train.lm,h=ntest,level=0)
plot(Smoothed_APAC_consumer_sales,ylab="Sales",xlab="Time",bty='l',
xaxt='n',col="red")
lines(train.lm.forecast$fitted,lwd=2,col="black",lty=3)
lines(train.lm.forecast$lower,col="blue")
APAC_consumer_accuracy <- accuracy(train.lm.forecast$mean,valid.ts)
APAC_consumer_accuracy
acf(train.lm.forecast$residuals,lag.max = 12)
pacf(train.lm.forecast$residuals,lag.max = 12)
train.res.ar1 <- arima(train.lm.forecast$residuals,order=c(2,0,2))
train.res.arima.pred1 <- forecast(train.res.ar1,h=ntest)
plot(train.lm$residuals,ylab="Residuals",xlab="Time",
bty="l",xaxt="n",xlim=c(2011,2014),main="")
axis(1,at=seq(2011,2014,1),labels=format(seq(2011,2014,1)))
lines(train.res.arima.pred1$fitted,lwd=2,col="blue")
summary(train.res.ar1)
train.res.ar2 <- arima(train.lm.forecast$residuals,order=c(2,0,1))
train.res.arima.pred2 <- forecast(train.res.ar2,h=ntest)
plot(train.lm$residuals,ylab="Residuals",xlab="Time",
bty="l",xaxt="n",xlim=c(2011,2014),main="")
axis(1,at=seq(2011,2014,1),labels=format(seq(2011,2014,1)))
lines(train.res.arima.pred2$fitted,lwd=2,col="green")
summary(train.res.ar2)
acf(train.res.arima.pred2$residuals,lag.max = 12)
APAC_consumer_combined_accuracy <- accuracy((train.lm.forecast$mean+train.res.arima.pred2$mean),valid.ts)
APAC_consumer_combined_accuracy
autoarima_ts <- auto.arima(train.ts)
tsdiag(autoarima_ts)
autoarima_forecast <- forecast(autoarima_ts,h=ntest)
autoarima_acc <- accuracy(autoarima_forecast,valid.ts)
source('D:/ml/R/timeseries/Assignment/timeseries.R')
library(MASS)
library(car)
library(plyr)
library(lubridate)
library(raster)
library(zoo)
library(stats)
library(dplyr)
library(forecast)
require(graphics)
library(ggplot2)
globalData <- read.csv("Global Superstore.csv",stringsAsFactors = F)
str(globalData)
summary(globalData)
sum(duplicated(globalData))
sum(is.na(globalData))
sum(is.na(globalData$Postal.Code))
ncol(globalData)
globalData$Postal.Code <- NULL
ncol(globalData)
sum(is.na(globalData))
globalData<-globalData[,-1]
str(globalData)
globalData$Order.Date<- as.Date(globalData$Order.Date, "%d-%m-%Y")
globalData$Ship.Date<- as.Date(globalData$Ship.Date, "%d-%m-%Y")
str(globalData)
sum(is.na(globalData))
globalData$Market.Segment <- paste(globalData$Market, globalData$Segment, sep = " ")
globalDatanew <- globalData
globalDatanew$Year.Month <- format(as.Date(globalDatanew$Order.Date), "%Y-%m")
invisible(lapply(split(globalDatanew, globalDatanew$Market.Segment), function(x) {assign(paste0("Market.Segment", x$Market.Segment[1]), x, pos = .GlobalEnv)}))
PI_1 <- globalDatanew %>%                                                    # Use dplyr for Aggregation
group_by(Market.Segment) %>%
summarise(., sum(Sales),                           # Total Sales Per Segment Per Market
sum(Profit),                          # Total Profit Per segment Per Market
sum(Quantity),                        # Total Quantity per segment per Market
sd(Profit)*100/mean(Profit),              # Profit Co-efficient of Variation
sum(Sales)/(sum(Sales)-sum(Profit)))
PI_2 <- globalDatanew %>%                                                    # Use dplyr for Aggregation
group_by(Market.Segment, Year.Month) %>%
summarise(., sum(Sales),                           # Total Sales Per Segment Per Market
sum(Profit),                          # Total Profit Per segment Per Market
sum(Quantity),                        # Total Quantity per segment per Market
sd(Profit)*100/mean(Profit),              # Profit Co-efficient of Variation
sum(Sales)/(sum(Sales)-sum(Profit)))   # Profitability Index, (selling cost/actual cost)
pa_segments <- globalDatanew[,c("Profit","Sales","Market","Segment","Quantity")] %>%   # Use dplyr for Aggregation
group_by(Market,Segment) %>%
dplyr::summarise(., sum(Sales),                           # Total Sales Per Segment Per Market
sum(Profit),                          # Total Profit Per segment Per Market
)
colnames(PI_2) <- c("Mkt_Segment", "Yr_Month", "Sales", "Profit", "Quantity", "Coeff_of_Var", "PI")
retail_cov <- aggregate.data.frame(globalDatanew$Profit,by=list(globalDatanew$Market.Segment),FUN = function(x) {sd(x)/mean(x)})
colnames(retail_cov) <- c("Market Segments","COV")
retail_order <- retail_cov[with(retail_cov,order(COV)),]
retail_order
colnames(pa_segments) = c("Market","Segment","Sales","Profit")
ggplot(pa_segments, aes( Segment, Sales, fill=Market)) + geom_bar(position = "dodge",stat = "identity")
top_2 <- subset(PI_2, Mkt_Segment == "APAC Consumer" |
Mkt_Segment == "APAC Corporate")
str(top_2)
names(top_2) <- c("Mkt_Segment", "Yr_Month", "Sales", "Profit", "Quantity", "Coeff_of_Var", "PI")
invisible(lapply(split(top_2, top_2$Mkt_Segment), function(x) {assign(paste0("Mkt_Segment", x$Mkt_Segment[1]), x, pos = .GlobalEnv)}))
APAC_Consumer <- `Mkt_SegmentAPAC Consumer`[,c(2:5)]
APAC_Corporate <- `Mkt_SegmentAPAC Corporate`[,c(2:5)]
APAC_consumer_sales_ts <- ts(APAC_Consumer$Sales,frequency=12,start=c(2011,1),end=c(2014,12))
plot(APAC_consumer_sales_ts)
Smoothed_APAC_consumer_sales <- stats::filter(APAC_consumer_sales_ts,
filter=rep(1/3,3,method='convolution',
sides=2))
APAC_consumer_sales_df <- data.frame(cbind(APAC_Consumer$Yr_Month,
Smoothed_APAC_consumer_sales))
colnames(APAC_consumer_sales_df) <- c("month","sales")
APAC_consumer_sales_df$sales <- as.numeric(as.character((APAC_consumer_sales_df$sales)))
lines(Smoothed_APAC_consumer_sales,col='red',lwd=2)
APAC_consumer_sales.ts <- ts(APAC_consumer_sales_df$sales,frequency=12,start=c(2011,1),
end=c(2014,12))
APAC_Consumer_sales_hw <- ts(APAC_consumer_sales_df$sales,frequency=12,start=c(2011,1),
end=c(2014,12))
plot(APAC_Consumer_sales_hw)
HoltWinters(APAC_Consumer_sales_hw)$fitted
APAC_Consumer_sales_hw <- ts(APAC_consumer_sales_df$sales,frequency=12,start=c(2011,1),
end=c(2014,12))
HoltWinters(APAC_Consumer_sales_hw)
plot(APAC_Consumer_sales_hw)
HoltWinters(APAC_Consumer_sales_hw)$fitted
APAC_Consumer_sales_hw_hw<-HoltWinters(APAC_Consumer_sales_hw)
plot(APAC_Consumer_sales_hw)
lines(predict(APAC_Consumer_sales_hw_hw$fitted,n.ahead=48),col=2)
predict(APAC_Consumer_sales_hw_hw,n.ahead=6)
ntest <- 6
nTrain <- length(APAC_consumer_sales.ts)-ntest
train.ts <- window(APAC_consumer_sales.ts,start = c(2011,1),end=c(2011,nTrain))
valid.ts <- window(APAC_consumer_sales.ts,start=c(2011,nTrain+1),
end=c(2011,nTrain+ntest))
train.lm <- tslm(train.ts~trend+I(sin(2*pi*trend/12))+season)
summary(train.lm)
train.lm.forecast <- forecast(train.lm,h=ntest,level=0)
plot(Smoothed_APAC_consumer_sales,ylab="Sales",xlab="Time",bty='l',
xaxt='n',col="red")
lines(train.lm.forecast$fitted,lwd=2,col="black",lty=3)
lines(train.lm.forecast$lower,col="blue")
APAC_consumer_accuracy <- accuracy(train.lm.forecast$mean,valid.ts)
APAC_consumer_accuracy
acf(train.lm.forecast$residuals,lag.max = 12)
pacf(train.lm.forecast$residuals,lag.max = 12)
train.res.ar1 <- arima(train.lm.forecast$residuals,order=c(2,0,2))
train.res.arima.pred1 <- forecast(train.res.ar1,h=ntest)
plot(train.lm$residuals,ylab="Residuals",xlab="Time",
bty="l",xaxt="n",xlim=c(2011,2014),main="")
axis(1,at=seq(2011,2014,1),labels=format(seq(2011,2014,1)))
lines(train.res.arima.pred1$fitted,lwd=2,col="blue")
summary(train.res.ar1)
train.res.ar2 <- arima(train.lm.forecast$residuals,order=c(2,0,1))
train.res.arima.pred2 <- forecast(train.res.ar2,h=ntest)
plot(train.lm$residuals,ylab="Residuals",xlab="Time",
bty="l",xaxt="n",xlim=c(2011,2014),main="")
axis(1,at=seq(2011,2014,1),labels=format(seq(2011,2014,1)))
lines(train.res.arima.pred2$fitted,lwd=2,col="green")
summary(train.res.ar2)
acf(train.res.arima.pred2$residuals,lag.max = 12)
APAC_consumer_combined_accuracy <- accuracy((train.lm.forecast$mean+train.res.arima.pred2$mean),valid.ts)
APAC_consumer_combined_accuracy
autoarima_ts <- auto.arima(train.ts)
tsdiag(autoarima_ts)
autoarima_forecast <- forecast(autoarima_ts,h=ntest)
autoarima_acc <- accuracy(autoarima_forecast,valid.ts)
autoarima_acc
train.lm.model <- tslm(APAC_consumer_sales.ts~trend+I(sin(2*pi*trend/12))+I(cos(2*pi*trend/12))+season)
summary(train.lm.model)
train.lm.total.forecast <- forecast(train.lm.model,h=6,level=c(0.2,0.4,0.6,0.8))
train.lm.total.forecast
plot(train.lm.total.forecast,col="red")
APAC_consumer_qunatity_ts <- ts(APAC_Consumer$Quantity,frequency=12,start=c(2011,1),end=c(2014,12))
plot(APAC_consumer_qunatity_ts)
Smoothed_APAC_consumer_quantity <- stats::filter(APAC_consumer_qunatity_ts,
filter=rep(1/3,3,method='convolution',
sides=2))
APAC_consumer_quantity_df <- data.frame(cbind(APAC_Consumer$Yr_Month,
Smoothed_APAC_consumer_quantity))
colnames(APAC_consumer_quantity_df) <- c("month","quantity")
APAC_consumer_quantity_df$quantity <- as.numeric(as.character((APAC_consumer_quantity_df$quantity)))
diff_1 <- APAC_consumer_quantity_df$quantity[3] - APAC_consumer_quantity_df$quantity[2]
APAC_consumer_quantity_df$quantity[1] <- APAC_consumer_quantity_df$quantity[2]-diff_1
diff_2 <- APAC_consumer_quantity_df$quantity[46] - APAC_consumer_quantity_df$quantity[45]
APAC_consumer_quantity_df$quantity[47] <- APAC_consumer_quantity_df$quantity[46]+ diff_2
diff_3 <- APAC_consumer_quantity_df$quantity[47] - APAC_consumer_quantity_df$quantity[46]
APAC_consumer_quantity_df$quantity[48] <- APAC_consumer_quantity_df$quantity[47]+ diff_3
lines(Smoothed_APAC_consumer_quantity,col='red',lwd=2)
APAC_consumer_quantity.ts <- ts(APAC_consumer_quantity_df$quantity,frequency=12,start=c(2011,1),
end=c(2014,12))
APAC_Consumer_quantity_hw <- ts(APAC_consumer_quantity_df$quantity,frequency=12,start=c(2011,1),
end=c(2014,12))
APAC_consumer_quantity.ts
HoltWinters(APAC_Consumer_quantity_hw)
plot(APAC_Consumer_quantity_hw)
HoltWinters(APAC_Consumer_quantity_hw)$fitted
APAC_Consumer_quantity_hw_hw<-HoltWinters(APAC_Consumer_quantity_hw)
plot(APAC_Consumer_quantity_hw)
lines(predict(APAC_Consumer_quantity_hw_hw,n.ahead=48),col=2)
predict(APAC_Consumer_quantity_hw_hw,n.ahead=6)
ntest <- 6
nTrain <- length(APAC_consumer_quantity.ts)-ntest
train.ts <- window(APAC_consumer_quantity.ts,start = c(2011,1),end=c(2011,nTrain))
valid.ts <- window(APAC_consumer_quantity.ts,start=c(2011,nTrain+1),
end=c(2011,nTrain+ntest))
train.lm <- tslm(train.ts~trend+I(sin(2*pi*trend/12))+season)
summary(train.lm)
train.lm.forecast <- forecast(train.lm,h=ntest,level=0)
plot(Smoothed_APAC_consumer_quantity,ylab="Sales",xlab="Time",bty='l',
xaxt='n',col="red")
axis(1,at=seq(2011,2014,1),labels=format(seq(2011,2014,1)))
lines(train.lm.forecast$fitted,lwd=2,col="black",lty=3)
lines(train.lm.forecast$mean,col="blue")
APAC_consumer_accuracy <- accuracy(train.lm.forecast$mean,valid.ts)
APAC_consumer_accuracy
acf(train.lm.forecast$residuals,lag.max = 12)
pacf(train.lm.forecast$residuals,lag.max = 12)
train.res.ar1 <- arima(train.lm.forecast$residuals,order=c(2,0,3))
train.res.arima.pred1 <- forecast(train.res.ar1,h=ntest)
plot(train.lm$residuals,ylab="Residuals",xlab="Time",
bty="l",xaxt="n",xlim=c(2011,2014),main="")
axis(1,at=seq(2011,2014,1),labels=format(seq(2011,2014,1)))
lines(train.res.arima.pred1$fitted,lwd=2,col="blue")
summary(train.res.ar1)                # MAPE- 144.6
train.res.ar2 <- arima(train.lm.forecast$residuals,order=c(2,0,1))
train.res.arima.pred2 <- forecast(train.res.ar2,h=ntest)
plot(train.lm$residuals,ylab="Residuals",xlab="Time",
bty="l",xaxt="n",xlim=c(2011,2014),main="")
axis(1,at=seq(2011,2014,1),labels=format(seq(2011,2014,1)))
lines(train.res.arima.pred2$fitted,lwd=2,col="blue")
summary(train.res.ar2)               # MAPE- 190.00
acf(train.res.arima.pred1$residuals,lag.max = 12)
APAC_consumer_combined_accuracy <- accuracy((train.lm.forecast$mean+train.res.arima.pred1$mean),valid.ts)
APAC_consumer_combined_accuracy
autoarima_ts <- auto.arima(train.ts)
tsdiag(autoarima_ts)
autoarima_forecast <- forecast(autoarima_ts,h=ntest)
autoarima_acc <- accuracy(autoarima_forecast,valid.ts)
autoarima_acc
train.lm.model <- tslm(APAC_consumer_quantity.ts~trend+I(sin(2*pi*trend/12))+season)
summary(train.lm.model)
train.lm.total.forecast_quan <- forecast(train.lm.model,h=6,level=c(0.2,0.4,0.6,0.8))
train.lm.total.forecast_quan
plot(train.lm.total.forecast_quan,col="red")
APAC_consumer_final_df <- data.frame(train.lm.total.forecast$mean,train.lm.total.forecast_quan$mean)
colnames(APAC_consumer_final_df) <- c("Sales","Qty")
APAC_Corporate
APAC_Corporate_sales_ts <- ts(APAC_Corporate$Sales,frequency=12,start=c(2011,1),end=c(2014,12))
plot(APAC_Corporate_sales_ts)
Smoothed_APAC_Corporate_sales <- stats::filter(APAC_Corporate_sales_ts,
filter=rep(1/3,3,method='convolution',
sides=2))
APAC_Corporate_sales_df <- data.frame(cbind(APAC_Corporate$Yr_Month,
Smoothed_APAC_Corporate_sales))
colnames(APAC_Corporate_sales_df) <- c("month","sales")
APAC_Corporate_sales_df$sales <- as.numeric(as.character((APAC_Corporate_sales_df$sales)))
diff_1 <- APAC_Corporate_sales_df$sales[3] - APAC_Corporate_sales_df$sales[2]
APAC_Corporate_sales_df$sales[1] <- APAC_Corporate_sales_df$sales[2]-diff_1
diff_2 <- APAC_Corporate_sales_df$sales[46] - APAC_Corporate_sales_df$sales[45]
APAC_Corporate_sales_df$sales[47] <- APAC_Corporate_sales_df$sales[46]+ diff_2
diff_3 <- APAC_Corporate_sales_df$sales[47] - APAC_Corporate_sales_df$sales[46]
APAC_Corporate_sales_df$sales[48] <- APAC_Corporate_sales_df$sales[47]+ diff_3
lines(Smoothed_APAC_Corporate_sales,col='red',lwd=2)
APAC_Corporate_sales.ts <- ts(APAC_Corporate_sales_df$sales,frequency=12,start=c(2011,1),
end=c(2014,12))
APAC_Corporate_sales_hw <- ts(APAC_Corporate_sales_df$sales,frequency=12,start=c(2011,1),
end=c(2014,12))
HoltWinters(APAC_Corporate_sales_hw)
plot(APAC_Corporate_sales_hw)
HoltWinters(APAC_Corporate_sales_hw)$fitted
APAC_Corporate_sales_hw_hw<-HoltWinters(APAC_Corporate_sales_hw)
plot(APAC_Corporate_sales_hw)
lines(predict(APAC_Corporate_sales_hw_hw,n.ahead=48),col=2,col='red')
predict(APAC_Corporate_sales_hw_hw,n.ahead=6)
ntest <- 6
nTrain <- length(US_consumer_sales.ts)-ntest
train.ts <- window(APAC_Corporate_sales.ts,start = c(2011,1),end=c(2011,nTrain))
valid.ts <- window(APAC_Corporate_sales.ts,start=c(2011,nTrain+1),
end=c(2011,nTrain+ntest))
predict(APAC_Corporate_sales_hw_hw,n.ahead=6)
ntest <- 6
nTrain <- length(APAC_Corporate_sales.ts)-ntest
train.ts <- window(APAC_Corporate_sales.ts,start = c(2011,1),end=c(2011,nTrain))
valid.ts <- window(APAC_Corporate_sales.ts,start=c(2011,nTrain+1),
end=c(2011,nTrain+ntest))
train.lm <- tslm(train.ts~trend+I(sin(2*pi*trend/12))+season)
summary(train.lm)
train.lm.forecast <- forecast(train.lm,h=ntest,level=0)
plot(Smoothed_APAC_Corporate_sales,ylab="Sales",xlab="Time",bty='l',
xaxt='n',col="red")
lines(train.lm.forecast$fitted,lwd=2,col="black",lty=3)
lines(train.lm.forecast$lower,col="blue")
APAC_Corporate_accuracy <- accuracy(train.lm.forecast$mean,valid.ts)
APAC_Corporate_accuracy
acf(train.lm.forecast$residuals,lag.max = 12)
pacf(train.lm.forecast$residuals,lag.max = 12)
train.res.ar1 <- arima(train.lm.forecast$residuals,order=c(2,0,0))
train.res.arima.pred1 <- forecast(train.res.ar1,h=ntest)
plot(train.lm$residuals,ylab="Residuals",xlab="Time",
bty="l",xaxt="n",xlim=c(2011,2014),main="")
axis(1,at=seq(2011,2014,1),labels=format(seq(2011,2014,1)))
lines(train.res.arima.pred1$fitted,lwd=2,col="blue")
summary(train.res.ar1)
train.res.ar2 <- arima(train.lm.forecast$residuals,order=c(2,0,1))
train.res.arima.pred2 <- forecast(train.res.ar2,h=ntest)
plot(train.lm$residuals,ylab="Residuals",xlab="Time",
bty="l",xaxt="n",xlim=c(2011,2014),main="")
axis(1,at=seq(2011,2014,1),labels=format(seq(2011,2014,1)))
lines(train.res.arima.pred2$fitted,lwd=2,col="green")
summary(train.res.ar2)
acf(train.res.arima.pred2$residuals,lag.max = 12)
APAC_Corporate_combined_accuracy <- accuracy((train.lm.forecast$mean+train.res.arima.pred2$mean),valid.ts)
APAC_Corporate_combined_accuracy
autoarima_ts <- auto.arima(train.ts)
tsdiag(autoarima_ts)
autoarima_forecast <- forecast(autoarima_ts,h=ntest)
autoarima_acc <- accuracy(autoarima_forecast,valid.ts)
autoarima_acc
train.lm.model <- tslm(APAC_Corporate_sales.ts~trend+I(sin(2*pi*trend/12))+I(cos(2*pi*trend/12))+season)
summary(train.lm.model)
train.lm.total.forecast <- forecast(train.lm.model,h=6,level=c(0.2,0.4,0.6,0.8))
train.lm.total.forecast
plot(train.lm.total.forecast,col="red")
APAC_Corporate_qunatity_ts <- ts(APAC_Corporate$Quantity,frequency=12,start=c(2011,1),end=c(2014,12))
plot(APAC_Corporate_qunatity_ts)
Smoothed_APAC_Corporate_quantity <- stats::filter(APAC_Corporate_qunatity_ts,
filter=rep(1/3,3,method='convolution',
sides=2))
APAC_Corporate_quantity_df <- data.frame(cbind(APAC_Corporate$Yr_Month,
Smoothed_APAC_Corporate_quantity))
colnames(APAC_Corporate_quantity_df) <- c("month","quantity")
APAC_Corporate_quantity_df$quantity <- as.numeric(as.character((APAC_Corporate_quantity_df$quantity)))
diff_1 <- APAC_Corporate_quantity_df$quantity[3] - APAC_Corporate_quantity_df$quantity[2]
APAC_Corporate_quantity_df$quantity[1] <- APAC_Corporate_quantity_df$quantity[2]-diff_1
diff_2 <- APAC_Corporate_quantity_df$quantity[46] - APAC_Corporate_quantity_df$quantity[45]
APAC_Corporate_quantity_df$quantity[47] <- APAC_Corporate_quantity_df$quantity[46]+ diff_2
diff_3 <- APAC_Corporate_quantity_df$quantity[47] - APAC_Corporate_quantity_df$quantity[46]
APAC_Corporate_quantity_df$quantity[48] <- APAC_Corporate_quantity_df$quantity[47]+ diff_3
lines(Smoothed_APAC_Corporate_quantity,col='red',lwd=2)
APAC_Corporate_quantity.ts <- ts(APAC_Corporate_quantity_df$quantity,frequency=12,start=c(2011,1),
end=c(2014,12))
APAC_Corporate_quantity_hw <- ts(APAC_Corporate_quantity_df$quantity,frequency=12,start=c(2011,1),
end=c(2014,12))
APAC_Corporate_quantity.ts
HoltWinters(APAC_Corporate_quantity_hw)
plot(APAC_Corporate_quantity_hw)
HoltWinters(APAC_Corporate_quantity_hw)$fitted
APAC_Corporate_quantity_hw_hw<-HoltWinters(APAC_Corporate_quantity_hw)
plot(APAC_Corporate_quantity_hw)
lines(predict(APAC_Corporate_quantity_hw_hw,n.ahead=48),col=2)
predict(APAC_Corporate_quantity_hw_hw,n.ahead=6)
ntest <- 6
nTrain <- length(APAC_Corporate_quantity.ts)-ntest
train.ts <- window(APAC_Corporate_quantity.ts,start = c(2011,1),end=c(2011,nTrain))
valid.ts <- window(APAC_Corporate_quantity.ts,start=c(2011,nTrain+1),
end=c(2011,nTrain+ntest))
train.lm <- tslm(train.ts~trend+I(sin(2*pi*trend/12))+season)
summary(train.lm)
train.lm.forecast <- forecast(train.lm,h=ntest,level=0)
plot(Smoothed_APAC_Corporate_quantity,ylab="Sales",xlab="Time",bty='l',
xaxt='n',flty=2,col="red")
axis(1,at=seq(2011,2014,1),labels=format(seq(2011,2014,1)))
lines(train.lm.forecast$fitted,lwd=2,col="black",lty=3)
lines(train.lm.forecast$mean,col="blue")
plot(Smoothed_APAC_Corporate_quantity,ylab="Sales",xlab="Time",bty='l',
xaxt='n',col="red")
axis(1,at=seq(2011,2014,1),labels=format(seq(2011,2014,1)))
lines(train.lm.forecast$fitted,lwd=2,col="black",lty=3)
lines(train.lm.forecast$mean,col="blue")
APAC_Corporate_accuracy <- accuracy(train.lm.forecast$mean,valid.ts)
APAC_Corporate_accuracy
acf(train.lm.forecast$residuals,lag.max = 12)
pacf(train.lm.forecast$residuals,lag.max = 12)
train.res.ar1 <- arima(train.lm.forecast$residuals,order=c(2,0,2))
train.res.arima.pred1 <- forecast(train.res.ar1,h=ntest)
plot(train.lm$residuals,ylab="Residuals",xlab="Time",
bty="l",xaxt="n",xlim=c(2011,2014),main="")
axis(1,at=seq(2011,2014,1),labels=format(seq(2011,2014,1)))
lines(train.res.arima.pred1$fitted,lwd=2,col="blue")
summary(train.res.ar1)                # MAPE- 144.6
train.res.ar2 <- arima(train.lm.forecast$residuals,order=c(2,0,1))
train.res.arima.pred2 <- forecast(train.res.ar2,h=ntest)
plot(train.lm$residuals,ylab="Residuals",xlab="Time",
bty="l",xaxt="n",xlim=c(2011,2014),main="")
axis(1,at=seq(2011,2014,1),labels=format(seq(2011,2014,1)))
lines(train.res.arima.pred2$fitted,lwd=2,col="blue")
summary(train.res.ar2)               # MAPE- 190.00
acf(train.res.arima.pred2$residuals,lag.max = 12)
APAC_Corporate_combined_accuracy <- accuracy((train.lm.forecast$mean+train.res.arima.pred2$mean),valid.ts)
APAC_Corporate_combined_accuracy
autoarima_ts <- auto.arima(train.ts)
tsdiag(autoarima_ts)
autoarima_forecast <- forecast(autoarima_ts,h=ntest)
autoarima_acc <- accuracy(autoarima_forecast,valid.ts)
autoarima_acc
train.lm.model <- tslm(APAC_Corporate_quantity.ts~trend+I(sin(2*pi*trend/12))+season)
summary(train.lm.model)
train.lm.total.forecast_quan <- forecast(train.lm.model,h=6,level=c(0.2,0.4,0.6,0.8))
train.lm.total.forecast_quan
plot(train.lm.total.forecast_quan,col="red")
APAC_Corporate_final_df <- data.frame(train.lm.total.forecast$mean,train.lm.total.forecast_quan$mean)
colnames(APAC_Corporate_final_df) <- c("Sales","Qty")
source('D:/ml/R/timeseries/Assignment/timeseries.R')
globalData <- read.csv("Global Superstore.csv",stringsAsFactors = F)
str(globalData)
summary(globalData)
sum(duplicated(globalData))
sum(is.na(globalData))
sum(is.na(globalData$Postal.Code))
ncol(globalData)
globalData$Postal.Code <- NULL
ncol(globalData)
sum(is.na(globalData))
globalData<-globalData[,-1]
str(globalData)
globalData$Order.Date<- as.Date(globalData$Order.Date, "%d-%m-%Y")
globalData$Ship.Date<- as.Date(globalData$Ship.Date, "%d-%m-%Y")
str(globalData)
sum(is.na(globalData))
globalData$Market.Segment <- paste(globalData$Market, globalData$Segment, sep = " ")
globalDatanew <- globalData
globalDatanew$Year.Month <- format(as.Date(globalDatanew$Order.Date), "%Y-%m")
invisible(lapply(split(globalDatanew, globalDatanew$Market.Segment), function(x) {assign(paste0("Market.Segment", x$Market.Segment[1]), x, pos = .GlobalEnv)}))
PI_1 <- globalDatanew %>%                                                    # Use dplyr for Aggregation
group_by(Market.Segment) %>%
summarise(., sum(Sales),                           # Total Sales Per Segment Per Market
sum(Profit),                          # Total Profit Per segment Per Market
sum(Quantity),                        # Total Quantity per segment per Market
sd(Profit)*100/mean(Profit),              # Profit Co-efficient of Variation
sum(Sales)/(sum(Sales)-sum(Profit)))
PI_2 <- globalDatanew %>%                                                    # Use dplyr for Aggregation
group_by(Market.Segment, Year.Month) %>%
summarise(., sum(Sales),                           # Total Sales Per Segment Per Market
sum(Profit),                          # Total Profit Per segment Per Market
sum(Quantity),                        # Total Quantity per segment per Market
sd(Profit)*100/mean(Profit),              # Profit Co-efficient of Variation
sum(Sales)/(sum(Sales)-sum(Profit)))   # Profitability Index, (selling cost/actual cost)
pa_segments <- globalDatanew[,c("Profit","Sales","Market","Segment","Quantity")] %>%   # Use dplyr for Aggregation
group_by(Market,Segment) %>%
dplyr::summarise(., sum(Sales),                           # Total Sales Per Segment Per Market
sum(Profit),                          # Total Profit Per segment Per Market
)
colnames(PI_2) <- c("Mkt_Segment", "Yr_Month", "Sales", "Profit", "Quantity", "Coeff_of_Var", "PI")
retail_cov <- aggregate.data.frame(globalDatanew$Profit,by=list(globalDatanew$Market.Segment),FUN = function(x) {sd(x)/mean(x)})
colnames(retail_cov) <- c("Market Segments","COV")
retail_order <- retail_cov[with(retail_cov,order(COV)),]
retail_order
colnames(pa_segments) = c("Market","Segment","Sales","Profit")
ggplot(pa_segments, aes( Segment, Sales, fill=Market)) + geom_bar(position = "dodge",stat = "identity")
top_2 <- subset(PI_2, Mkt_Segment == "APAC Consumer" |
Mkt_Segment == "APAC Corporate")
str(top_2)
names(top_2) <- c("Mkt_Segment", "Yr_Month", "Sales", "Profit", "Quantity", "Coeff_of_Var", "PI")
invisible(lapply(split(top_2, top_2$Mkt_Segment), function(x) {assign(paste0("Mkt_Segment", x$Mkt_Segment[1]), x, pos = .GlobalEnv)}))
APAC_Consumer <- `Mkt_SegmentAPAC Consumer`[,c(2:5)]
APAC_Corporate <- `Mkt_SegmentAPAC Corporate`[,c(2:5)]
APAC_consumer_sales_ts <- ts(APAC_Consumer$Sales,frequency=12,start=c(2011,1),end=c(2014,12))
plot(APAC_consumer_sales_ts)
Smoothed_APAC_consumer_sales <- stats::filter(APAC_consumer_sales_ts,                # Here had to use stats::filter due tp plyr issue#
filter=rep(1/3,3,method='convolution',
sides=2))
APAC_consumer_sales_df <- data.frame(cbind(APAC_Consumer$Yr_Month,
Smoothed_APAC_consumer_sales))
colnames(APAC_consumer_sales_df) <- c("month","sales")
APAC_consumer_sales_df$sales <- as.numeric(as.character((APAC_consumer_sales_df$sales)))
diff_1 <- APAC_consumer_sales_df$sales[3] - APAC_consumer_sales_df$sales[2]
APAC_consumer_sales_df$sales[1] <- APAC_consumer_sales_df$sales[2]-diff_1
diff_2 <- APAC_consumer_sales_df$sales[46] - APAC_consumer_sales_df$sales[45]
APAC_consumer_sales_df$sales[47] <- APAC_consumer_sales_df$sales[46]+ diff_2
diff_3 <- APAC_consumer_sales_df$sales[47] - APAC_consumer_sales_df$sales[46]
APAC_consumer_sales_df$sales[48] <- APAC_consumer_sales_df$sales[47]+ diff_3
lines(Smoothed_APAC_consumer_sales,col='red',lwd=2)
APAC_consumer_sales.ts <- ts(APAC_consumer_sales_df$sales,frequency=12,start=c(2011,1),
end=c(2014,12))
APAC_Consumer_sales_hw <- ts(APAC_consumer_sales_df$sales,frequency=12,start=c(2011,1),
end=c(2014,12))
HoltWinters(APAC_Consumer_sales_hw)
plot(APAC_Consumer_sales_hw)
HoltWinters(APAC_Consumer_sales_hw)$fitted
APAC_Consumer_sales_hw_hw<-HoltWinters(APAC_Consumer_sales_hw)
plot(APAC_Consumer_sales_hw)
lines(predict(APAC_Consumer_sales_hw_hw$fitted,n.ahead=48),col=2)
predict(APAC_Consumer_sales_hw_hw,n.ahead=6)
predict(APAC_Consumer_sales_hw_hw,n.ahead=6)
source('D:/ml/R/timeseries/Assignment/timeseries.R')
source('D:/ml/R/timeseries/Assignment/timeseries.R')
pa_segments <- globalDatanew[,c("Profit","Sales","Market","Segment","Quantity")] %>%   # Use dplyr for Aggregation
group_by(Market,Segment) %>%
dplyr::summarise(., sum(Sales),                           # Total Sales Per Segment Per Market
sum(Profit),                          # Total Profit Per segment Per Market
)
